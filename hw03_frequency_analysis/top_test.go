package hw03frequencyanalysis

import (
	"testing"

	"github.com/stretchr/testify/require"
)

// Change to true if needed.
var taskWithAsteriskIsCompleted = true

var text = `Как видите, он  спускается  по  лестнице  вслед  за  своим
	другом   Кристофером   Робином,   головой   вниз,  пересчитывая
	ступеньки собственным затылком:  бум-бум-бум.  Другого  способа
	сходить  с  лестницы  он  пока  не  знает.  Иногда ему, правда,
		кажется, что можно бы найти какой-то другой способ, если бы  он
	только   мог   на  минутку  перестать  бумкать  и  как  следует
	сосредоточиться. Но увы - сосредоточиться-то ему и некогда.
		Как бы то ни было, вот он уже спустился  и  готов  с  вами
	познакомиться.
	- Винни-Пух. Очень приятно!
		Вас,  вероятно,  удивляет, почему его так странно зовут, а
	если вы знаете английский, то вы удивитесь еще больше.
		Это необыкновенное имя подарил ему Кристофер  Робин.  Надо
	вам  сказать,  что  когда-то Кристофер Робин был знаком с одним
	лебедем на пруду, которого он звал Пухом. Для лебедя  это  было
	очень   подходящее  имя,  потому  что  если  ты  зовешь  лебедя
	громко: "Пу-ух! Пу-ух!"- а он  не  откликается,  то  ты  всегда
	можешь  сделать вид, что ты просто понарошку стрелял; а если ты
	звал его тихо, то все подумают, что ты  просто  подул  себе  на
	нос.  Лебедь  потом  куда-то делся, а имя осталось, и Кристофер
	Робин решил отдать его своему медвежонку, чтобы оно не  пропало
	зря.
		А  Винни - так звали самую лучшую, самую добрую медведицу
	в  зоологическом  саду,  которую  очень-очень  любил  Кристофер
	Робин.  А  она  очень-очень  любила  его. Ее ли назвали Винни в
	честь Пуха, или Пуха назвали в ее честь - теперь уже никто  не
	знает,  даже папа Кристофера Робина. Когда-то он знал, а теперь
	забыл.
		Словом, теперь мишку зовут Винни-Пух, и вы знаете почему.
		Иногда Винни-Пух любит вечерком во что-нибудь поиграть,  а
	иногда,  особенно  когда  папа  дома,  он больше любит тихонько
	посидеть у огня и послушать какую-нибудь интересную сказку.
		В этот вечер...`

func TestTop10(t *testing.T) {
	t.Run("no words in empty string", func(t *testing.T) {
		require.Len(t, Top10(""), 0)
	})

	t.Run("positive test", func(t *testing.T) {
		if taskWithAsteriskIsCompleted {
			expected := []string{
				"а",         // 8
				"он",        // 8
				"и",         // 6
				"ты",        // 5
				"что",       // 5
				"в",         // 4
				"его",       // 4
				"если",      // 4
				"кристофер", // 4
				"не",        // 4
			}
			require.Equal(t, expected, Top10(text))
		} else {
			expected := []string{
				"он",        // 8
				"а",         // 6
				"и",         // 6
				"ты",        // 5
				"что",       // 5
				"-",         // 4
				"Кристофер", // 4
				"если",      // 4
				"не",        // 4
				"то",        // 4
			}
			require.Equal(t, expected, Top10(text))
		}
	})
}

func TestTop10Extended(t *testing.T) {
	tests := []struct {
		input    string
		expected []string
	}{
		{
			input:    `不客3气: 不客3气, 不客3气 «不客3气», 不客3气. 不客3气 `,
			expected: []string{"不客3气"},
		},
		{
			input: `प्रति और्४५० हुएआदि वर्तमान देकर प्रेरना निर्माण 
		सुचनाचलचित्र बहतर विकास जाता विशेष परिवहन 
		सोफ़्टवेर जाता सादगि विकसित असरकारक भाषाओ आवश्यक विभाजनक्षमता
		जिवन पुस्तक तरहथा। वातावरण पढाए शीघ्र उद्योग 
		सोफ़तवेर अमितकुमार उशकी डाले। समाजो एसलिये हुआआदी विकेन्द्रित भारत सारांश उपेक्ष 
		व्याख्यान सीमित पढाए परस्पर ऎसाजीस यायेका 
		चिदंश संभव ब्रौशर हार्डवेर कम्प्युटर कीने विवरण उपेक्ष उपेक्ष उपेक्ष उपेक्ष जाता जाता`,
			expected: []string{"उपेक्ष", "जाता", "पढाए", "अमितकुमार", "असरकारक", "आवश्यक", "उद्योग", "उशकी", "ऎसाजीस", "एसलिये"},
		},
		{
			input: `один два два три три три 
		четыре четыре четыре четыре 
		пять пять пять пять пять 
		шесть шесть шесть шесть шесть шесть 
		семь семь семь семь семь семь семь 
		восемь восемь восемь восемь восемь восемь восемь восемь 
		девять девять девять девять девять девять девять девять девять
		десять десять десять десять десять десять десять десять десять десять
		сто сто сто сто сто сто сто сто сто сто сто сто сто сто сто сто сто сто сто сто сто сто сто сто`,
			expected: []string{"сто", "десять", "девять", "восемь", "семь", "шесть", "пять", "четыре", "три", "два"},
		},
	}
	for _, tc := range tests {
		t.Run(tc.input, func(t *testing.T) {
			require.Equal(t, tc.expected, Top10(tc.input))
		})
	}
}
